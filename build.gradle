plugins {
    id 'java'
    id 'eclipse'
    id 'maven-publish'

    id 'org.cadixdev.licenser' version '0.6.1'
    id 'net.minecraftforge.gradleutils' version '2.+'
    id 'com.github.johnrengelman.shadow' version '8.0.0'
}

group = 'net.minecraftforge'
version = gradleutils.getTagOffsetVersion()

changelog {
    fromTag '2.3'
}

repositories {
    mavenCentral()
}

license {
    header project.file('LICENSE-header.txt')
    include 'net/minecraftforge/mcpcleanup/**/*.java'
    newLine false
}

tasks.withType(Jar).configureEach {
    manifest.attributes([
            'Main-Class'            : 'net.minecraftforge.mcpcleanup.ConsoleTool',
            'Implementation-Version': project.version
    ])
}

shadowJar {
    archiveClassifier.set('fatjar')
}

java {
    withSourcesJar()
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

dependencies {
    implementation 'net.sf.jopt-simple:jopt-simple:5.0.4'
    implementation 'com.github.abrarsyed.jastyle:jAstyle:1.3'
    implementation 'com.google.code.gson:gson:2.8.6'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'MCPCleanup'
                description = 'Cleans up the decompiled output of MCPConfig'
                url = 'https://github.com/MinecraftForge/MCPCleanup'
                scm {
                    url = 'https://github.com/MinecraftForge/MCPCleanup'
                    connection = 'scm:git:git://github.com/MinecraftForge/MCPCleanup.git'
                    developerConnection = 'scm:git:git@github.com:MinecraftForge/MCPCleanup.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/MinecraftForge/MCPCleanup/issues'
                }

                licenses {
                    license {
                        name = 'LGPLv2.1'
                        url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                    }
                }

                developers {
                    developer {
                        id = 'LexManos'
                        name = 'Lex Manos'
                    }
                }
            }
        }
    }
    repositories {
        maven gradleutils.getPublishingForgeMaven()
    }
}
